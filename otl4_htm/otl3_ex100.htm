<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>OTL 4.0, Example 98 (otl_value&lt;T&gt;, Oracle 8/8i)</TITLE>
   <META NAME="Author" CONTENT="Sergei Kuchin">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.03Gold (Win95; I) [Netscape]">
   <META NAME="KeyWords" CONTENT="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</HEAD>
<BODY>

<H1 ALIGN=CENTER>OTL 4.0, Example 100 (otl_value&lt;T&gt;, DB2-CLI)</H1>

<H1>Example 100 (otl_value&lt;T&gt;, DB2-CLI)</H1>

<P>This example demonstrates OTL streams and <A HREF="otl3_value.htm">otl_value&lt;T&gt;</A>.
</P>

<H2>Source Code</H2>

<PRE>#include &lt;iostream&gt;
#include &lt;string&gt;</PRE>

<PRE>#define OTL_DB2_CLI // Compile OTL 4.0/DB2-CLI
#define OTL_STL // Turn on STL features and otl_value&lt;T&gt;
#define OTL_ANSI_CPP // Turn on ANSI C++ typecasts
#include &lt;otlv4.h&gt; // include the OTL 4.0 header file

using namespace std;

<A HREF="otl3_connect_class.htm">otl_connect</A> db; // connect object

void insert()
// insert rows into table
{ 
 <A HREF="otl3_stream_class.htm">otl_stream</A> o(50, // buffer size
              &quot;insert into test_tab &quot;
              &quot;values(:f1&lt;int&gt;,:f2&lt;char[31]&gt;,:f3&lt;<A HREF="otl3_bind_variables.htm#db2date">db2date</A>&gt;)&quot;, 
                 // SQL statement
              db // connect object
             );

 <A HREF="otl3_value.htm">otl_value</A>&lt;string&gt; f2; // otl_value container of STL string
 <A HREF="otl3_value.htm">otl_value</A>&lt;<A HREF="otl3_stream_class.htm#otl_datetime">otl_datetime</A>&gt; f3; // container of otl_datetime


 for(int i=1;i&lt;=100;++i){

  if(i%2==0)
   f2=&quot;NameXXX&quot;;
  else
   f2=otl_null(); // Assign otl_null() to f2

  if(i%3==0){
   // Assign a value to f3 via the .v field directly
   f3.v.year=2001;
   f3.v.month=1;
   f3.v.day=1;
   f3.set_non_null(); // Set f3 as a &quot;non-NULL&quot;
  }else
   f3.set_null(); // Set f3 as null via .set_null() function

  o&lt;&lt;i&lt;&lt;f2&lt;&lt;f3;

 }
}

void select()
{ 
 <A HREF="otl3_stream_class.htm">otl_stream</A> i(50, // buffer size
              &quot;select * from test_tab where f1&gt;=:f11&lt;int&gt; and f1&lt;=:f12&lt;int&gt;*2&quot;,
                 // SELECT statement
              db // connect object
             ); 
   // create select stream

 int f1; 
 <A HREF="otl3_value.htm">otl_value</A>&lt;string&gt; f2;
 <A HREF="otl3_value.htm">otl_value</A>&lt;<A HREF="otl3_stream_class.htm#otl_datetime">otl_datetime</A>&gt; f3;


 i&lt;&lt;8&lt;&lt;8; // assigning :f11, :f12 = 8
   // SELECT automatically executes when all input variables are
   // assigned. First portion of output rows is fetched to the buffer

 while(!i.eof()){ // while not end-of-data
  i&gt;&gt;f1&gt;&gt;f2&gt;&gt;f3;
  cout&lt;&lt;&quot;f1=&quot;&lt;&lt;f1&lt;&lt;&quot;, f2=&quot;&lt;&lt;f2&lt;&lt;&quot;, f3=&quot;&lt;&lt;f3&lt;&lt;endl;
 }

 i&lt;&lt;4&lt;&lt;4; // assigning :f11, :f12 = 4
   // SELECT automatically executes when all input variables are
   // assigned. First portion of output rows is fetched to the buffer

 while(!i.eof()){ // while not end-of-data
  i&gt;&gt;f1&gt;&gt;f2&gt;&gt;f3;
  cout&lt;&lt;&quot;f1=&quot;&lt;&lt;f1&lt;&lt;&quot;, f2=&quot;&lt;&lt;f2&lt;&lt;&quot;, f3=&quot;&lt;&lt;f3&lt;&lt;endl;
 }

}

int main()
{
 <A HREF="otl3_connect_class.htm">otl_connect::otl_initialize</A>(); // initialize DB2-CLI environment
 try{

  db.rlogon(&quot;scott/tiger@db2sql&quot;); // connect to DB2

  <A HREF="otl3_const_sql.htm">otl_cursor::direct_exec
</A>   (
    db,
    &quot;drop table test_tab&quot;,
    otl_exception::disabled // disable OTL exceptions
   ); // drop table

  <A HREF="otl3_const_sql.htm">otl_cursor::direct_exec
</A>   (
    db,
    &quot;create table test_tab(f1 int, f2 varchar(30), f3 date)&quot;
    );  // create table

  insert(); // insert records into table
  select(); // select records from table

 }

 catch(<A HREF="otl3_exception_class.htm">otl_exception</A>&amp; p){ // intercept OTL exceptions
  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message
  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error
  cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message
  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error
 }

 db.logoff(); // disconnect from DB2

 return 0;

}
</PRE>

<H2>Output</H2>

<PRE>f1=8, f2=NameXXX, f3=NULL
f1=9, f2=NULL, f3=1/1/2001 0:0:0
f1=10, f2=NameXXX, f3=NULL
f1=11, f2=NULL, f3=NULL
f1=12, f2=NameXXX, f3=1/1/2001 0:0:0
f1=13, f2=NULL, f3=NULL
f1=14, f2=NameXXX, f3=NULL
f1=15, f2=NULL, f3=1/1/2001 0:0:0
f1=16, f2=NameXXX, f3=NULL
f1=4, f2=NameXXX, f3=NULL
f1=5, f2=NULL, f3=NULL
f1=6, f2=NameXXX, f3=1/1/2001 0:0:0
f1=7, f2=NULL, f3=NULL
f1=8, f2=NameXXX, f3=NULL

<HR WIDTH="100%"></PRE>

<CENTER><P><A HREF="otl3_examples.htm">Examples</A> <A HREF="otl3.htm">Contents</A>
<A HREF="home.htm">Go Home</A> </P></CENTER>

<P>Copyright &copy; 1996, 2009, Sergei Kuchin, email: <A HREF="mailto:skuchin@aceweb.com">skuchin@aceweb.com</A>,
<A HREF="mailto:skuchin@gmail.com">skuchin@gmail.com</A>. <SCRIPT Language="JavaScript"><!-- hide from oldgmailsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </SCRIPT></P>

<P><I>Permission to use, copy, modify and redistribute this document for
any purpose is hereby granted without fee, provided that the above copyright
notice appear in all copies. </I></P>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</BODY>
</HTML>
