<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR"
 content="Mozilla/4.77 [en] (Win95; U) [Netscape]">
  <meta name="KeyWords"
 content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
  <title>OTL 4.0, Example 295 (otl_datetime container and
DATE/TIME/TIMESTAMP table containers)</title>
</head>
<body>
<center>
<h1>OTL 4.0, Example 295 (otl_datetime container and
DATE/TIME/TIMESTAMP table
columns)</h1>
</center>
<h1>
Example 295 (otl_datetime container and DATE/TIME/TIMESTAMP table
columns)</h1>
This example demonstrates simple INSERT/SELECT with&nbsp;
DATEs/TIMEs/TIMESTAMPs
and <a href="otl3_stream_class.htm#otl_datetime">otl_datetime</a>.
This examples was linked with the TimesTen Client ODBC Driver library
(libttclient.so (Linux/Unix), ttclient.lib (Windows)).
<h2>Source Code</h2>
<pre>#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;</pre>
<pre>#define <a href="otl3_compile.htm#OTL_ODBC_TIMESTEN_WIN">OTL_ODBC_TIMESTEN_WIN</a> // Compile OTL 4.0/TimesTen ODBC for Windows<br>// Uncomment the following when building this example in Unix/Linux<br>// #define <a
 href="otl3_compile.htm#OTL_ODBC_TIMESTEN_UNIX">OTL_ODBC_TIMESTEN_UNIX</a> // Compile OTL 4.0/TimesTen ODBC for Unix<br><br>// #define OTL_ODBC_UNIX // uncomment this line if UnixODBC is used<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><br><a
 href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br>void insert(void)<br>// insert rows into table<br>{ <br>&nbsp;<a
 href="otl3_stream_class.htm#no_commit">otl_stream</a> <br>   o(10, // buffer size<br>&nbsp;&nbsp;&nbsp;&nbsp; "insert into test_tab "<br>&nbsp;&nbsp;&nbsp;&nbsp; "values(:f1&lt;int&gt;,:f2&lt;<a
 href="otl3_bind_variables.htm#timestamp">timestamp</a>&gt;,:f3&lt;<a
 href="otl3_bind_variables.htm#timestamp">timestamp</a>&gt;,:f4&lt;<a
 href="otl3_bind_variables.htm#timestamp">tim</a><a
 href="otl3_bind_variables.htm#timestamp">estamp</a>&gt;)",&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // INSERT statement<br>&nbsp;&nbsp;&nbsp;&nbsp; db // connect object<br> &nbsp;&nbsp; );<br><br>&nbsp;<a
 href="otl3_stream_class.htm#otl_datetime">otl_datetime</a> tm1,tm2,tm3;<br><br>&nbsp; for(int i=1;i&lt;=10;++i){<br><br>  tm1.year=1998;<br>  tm1.month=10;<br>  tm1.day=19;<br>// time conponents should be set to 0<br>  tm1.hour=0;<br>  tm1.minute=0;<br>  tm1.second=0;<br><br>// date conponents should be set to 0<br>  tm2.year=0;<br>  tm2.month=0;<br>  tm2.day=0;<br><br>  tm2.hour=23;<br>  tm2.minute=12;<br>  tm2.second=12;<br><br>  tm3.year=1998;<br>  tm3.month=10;<br>  tm3.day=19;<br>  tm3.hour=23;<br>  tm3.minute=12;<br>  tm3.second=12;<br><br>  o&lt;&lt;i&lt;&lt;tm1&lt;&lt;tm2&lt;&lt;tm3;<br><br> }<br>&nbsp;<br>}<br><br>void select(void)<br>{ <br> otl_stream i(10, // buffer size can be set to a value in [1..128] range<br>              "select * from test_tab",<br>                 // SELECT statement<br>              db // connect object<br>             ); <br> <br> int f1;<br> otl_datetime f2,f3,f4;<br><br> while(!i.eof()){ // while not end-of-data<br>  i&gt;&gt;f1&gt;&gt;f2&gt;&gt;f3&gt;&gt;f4;<br>  cout&lt;&lt;"f1="&lt;&lt;f1;<br>  cout&lt;&lt;", f2="&lt;&lt;f2.month&lt;&lt;"/"&lt;&lt;f2.day&lt;&lt;"/"<br>      &lt;&lt;f2.year;<br>  cout&lt;&lt;", f3="&lt;&lt;f3.hour&lt;&lt;":"&lt;&lt;f3.minute&lt;&lt;":"<br>      &lt;&lt;f3.second;<br>  cout&lt;&lt;", f4="&lt;&lt;f4.month&lt;&lt;"/"&lt;&lt;f4.day&lt;&lt;"/"<br>      &lt;&lt;f4.year&lt;&lt;" "&lt;&lt;f4.hour&lt;&lt;":"&lt;&lt;f4.minute&lt;&lt;":"<br>      &lt;&lt;f4.second;<br>  cout&lt;&lt;endl;<br> }<br> <br>}<br></pre>
<pre>int main()<br>{<br>&nbsp;<a href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize ODBC environment<br>&nbsp;try{<br><br>&nbsp; db.rlogon("scott/tiger@TT_tt70_32"); <br><br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (<br>&nbsp;&nbsp;&nbsp; db,<br>&nbsp;&nbsp;&nbsp; "drop table test_tab",<br>&nbsp;&nbsp;&nbsp; otl_exception::disabled // disable OTL exceptions<br>&nbsp;&nbsp; ); // drop table<br><br>&nbsp; <a
 href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>&nbsp;&nbsp; (<br>&nbsp;&nbsp;&nbsp; db,<br>&nbsp;&nbsp;&nbsp; "create table test_tab(f1 int, f2 date, f3 time, f4 timestamp)"<br>&nbsp;&nbsp;&nbsp; );&nbsp; // create table<br><br>&nbsp; insert(); // insert records into table<br>&nbsp; select(); // select records from table<br><br>&nbsp;}<br><br>&nbsp;catch(<a
 href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>&nbsp; cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>&nbsp; cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>&nbsp; cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message<br>&nbsp; cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br>&nbsp;}<br><br>&nbsp;db.logoff(); // disconnect from ODBC<br><br>&nbsp;return 0;<br><br>}</pre>
<h2>
Output</h2>
<pre>f1=1, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=2, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=3, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=4, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=5, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=6, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=7, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=8, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=9, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br>f1=10, f2=10/19/1998, f3=23:12:12, f4=10/19/1998 23:12:12<br><br><hr
 width="100%"></pre>
<center><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a
 href="home.htm">Go
Home</a></center>
<p>Copyright &copy; 1996, 2009, Sergei Kuchin, email: <a
 href="mailto:skuchin@aceweb.com">skuchin@aceweb.com</a>,
<a href="mailto:skuchin@gmail.com">skuchin@gmail.com
<script language="JavaScript"><!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
 //-->
 </script></a>.
</p>
<p><i>Permission to use, copy, modify and redistribute this document
for
any purpose is hereby granted without fee, provided that the above
copyright
notice appear in all copies.</i>
</p>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
pageTracker._trackPageview();
</script>
</body>
</html>
